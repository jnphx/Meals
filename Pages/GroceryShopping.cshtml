@page
@using WeeklyMeals.Models.WeeklyMealsViewModels
@model WeeklyMeals.Pages.GroceryShoppingModel
@{
}
@{
    ViewData["Title"] = "Grocery List";
}
@functions {

    public static string FormatMeasurement(double Amount, string SizeType)
    {
        string numberFormat = "{0:0.0}";
        if (Amount % 1 <= .1)
        {
            numberFormat = "{0:0}";
        }
        if (Amount > 1 && (SizeType.Equals("cup") || SizeType.Equals("bag")))
        {
            return string.Format(numberFormat + " {1}s", Amount, SizeType);
        }
        else if (SizeType.Equals("each"))
        {
            return string.Format(numberFormat + " {0}s", Amount);
        }
        {
            return string.Format(numberFormat + " {1}", Amount, SizeType);
        }
    }
}
<div style="padding-left:40px; background-color:white;">

    <h3>Grocery List</h3>

    <table class="table table-borderless">
        <tbody>
            @{ string tempAisle = ""; int ingredCounter = 1; string temp = ""; }
            @foreach (var item in Model.FoodsGroups)
            {
                if (!item.AisleName.Equals(tempAisle))
                {
                    <tr>
                        @if (!item.AisleName.Equals(tempAisle))
                        {
                            ingredCounter = 1;
                            <td>
                                <header class="ingredients-header px-2 py-2" style="text-transform: uppercase">
                                    @Html.DisplayFor(modelItem => item.AisleName)
                                </header>
                            </td>
                            tempAisle = item.AisleName;
                        }
                    </tr>
                }
        <tr>
            <!-- Food name-->
            @if (ingredCounter % 2 == 1)
            {
                temp = "tr-odd";
            }
            else
            {
                temp = "";
            }
            <td class=@temp>
                <div class="grocery-list-component-item">
                    @FormatMeasurement(item.TotalAmount, item.AmountType) @Html.DisplayFor(modelItem => item.FoodName)
                </div>
            </td>
        </tr>
                ingredCounter++;
            }
                </tbody>
            </table>
        </div>