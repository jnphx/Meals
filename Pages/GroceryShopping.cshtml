@page
@using WeeklyMeals.Models.WeeklyMealsViewModels
@model WeeklyMeals.Pages.GroceryShoppingModel
@{
}
@{
    ViewData["Title"] = "Grocery List";
}
@functions {

    public static string FormatMeasurement(double Amount, string SizeType)
    {
        string numberFormat = "{0:0.0}";
        if (Amount % 1 <= .1)
        {
            numberFormat = "{0:0}";
        }
        if (Amount > 1 && (SizeType.Equals("cup") || SizeType.Equals("bag")))
        {
            return string.Format(numberFormat + " {1}s", Amount, SizeType);
        }
        else if (SizeType.Equals("each"))
        {
            return string.Format(numberFormat + " {0}s", Amount);
        }
        {
            return string.Format(numberFormat + " {1}", Amount, SizeType);
        }
    }
}

<h3 style="padding-top: 58px;">Grocery List</h3>

<table class="table table-hover">
    <tbody>
        @{ string tempAisle = ""; }
        @foreach (var item in Model.FoodsGroups)
        {
            if (!item.AisleName.Equals(tempAisle))
            {
                <tr>
                    @if (!item.AisleName.Equals(tempAisle))
                    {
                        <td>
                            <header class="ingredients-header px-2 py-2" style="text-transform: uppercase">
                                <span class="title h4">@Html.DisplayFor(modelItem => item.AisleName)</span>
                            </header>
                        </td>
                        tempAisle = item.AisleName;
                    }
                </tr>
            }
            <tr>
                <td>
                    <!-- Food name-->
                    <div class="grocery-list-component-item">
                        @FormatMeasurement(item.TotalAmount, item.AmountType) @Html.DisplayFor(modelItem => item.FoodName)
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
