@page
@model WeeklyMeals.Pages.MealPlans.WeekendPrepModel
@using WeeklyMeals.Models.WeeklyMealsViewModels
@{
}

@{
}
@{
    ViewData["Title"] = "Weekend Prep";
}
@functions {

    public static string FormatMeasurement(double Amount, string SizeType)
    {
        string numberFormat = "{0:0.0}";
        if (Amount % 1 <= .1)
        {
            numberFormat = "{0:0}";
        }
        if (Amount > 1 && (SizeType.Equals("cup") || SizeType.Equals("bag")))
        {
            return string.Format(numberFormat + " {1}s", Amount, SizeType);
        }
        else if (SizeType.Equals("each"))
        {
            return string.Format(numberFormat + " {0}s", Amount);
        }
        {
            return string.Format(numberFormat + " {1}", Amount, SizeType);
        }
    }
}

<div style="padding-left: 40px; background-color: white;">

    <h3>Prep</h3>

    @{ int ingredCounter = 0; string temp = ""; }
    <table class="table table-borderless">
        <tbody>
            <tr>
                <td>
                    <header class="ingredients-header px-2 py-2" style="text-transform: uppercase">
                        Chop
                    </header>
                </td>
            </tr>
            @foreach (var item in Model.FoodsGroups)
            {
                <tr>
                    @if (ingredCounter % 2 == 1)
                    {
                        temp = "tr-odd";
                    }
                    else
                    {
                        temp = "";
                    }
                    <td class=@temp>
                        <div class="grocery-list-component-item">
                            @FormatMeasurement(item.TotalAmount, item.AmountType)
                            @Html.DisplayFor(modelItem => item.FoodName),
                            @Html.DisplayFor(i => item.PrepType)
                        </div>
                    </td>
                </tr>
                ingredCounter++;
            }

        </tbody>
    </table>

</div>